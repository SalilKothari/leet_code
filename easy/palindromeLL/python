# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def isPalindrome(self, head: Optional[ListNode]) -> bool:
        
        slow = head
        fast = head.next
        
        while(fast and fast.next):
            slow = slow.next
            fast = fast.next.next
            
        #reverse:
        prev = None
        curr = slow.next
        
        while(curr):
            temp = curr.next
            curr.next = prev
            prev = curr
            curr = temp
            
        
        #run through both
        
        while(prev):
            if head.val != prev.val:
                return False
            prev = prev.next
            head = head.next
            
            
            
            
        return True         
        
        
        
