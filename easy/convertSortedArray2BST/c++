/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        //find middle
        return buildBST(nums, 0, nums.size()-1);
    }
    
    
    
    TreeNode* buildBST(vector<int>& nums, int left, int right){
        if(left>right) return nullptr;
        
        //find middle:
        int mid = (left+right) >> 1;
        
        TreeNode* root = new TreeNode(
            nums[mid], 
            buildBST(nums, left, mid - 1), 
            buildBST(nums, mid + 1, right)
        );
        return root;
        
        
        
    }
};
