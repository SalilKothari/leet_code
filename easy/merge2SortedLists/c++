/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        
        if(!list1){
            return list2;
        }
        if(!list2){
            return list1;
        }
        
        
        ListNode* head;
        
        if(list1->val>list2->val){
            head = list2;
            list2 = list2->next;
        }
        else{
            head = list1;
            list1 = list1->next;
        }        
        
        
        ListNode* run = head;
        
        while(list1 && list2){
            if(list1->val >= list2->val){
                run->next = list2;
                list2 = list2->next;
            }
            else{
                run->next = list1;
                list1 = list1->next;
            }
            run = run->next;
        }
        
        if(list1){
            run->next = list1;
        }
        if(list2) run->next = list2;
        
        
        
        return head;
        
    }
};
