/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> master;
        helper(master, 0, root);
        
        return master;
    }
    
    
    
    void helper(vector<vector<int>> &master, size_t level, TreeNode* root){
        
        if(!root) return;
        
        //add current level itemsz
        if(level == master.size()){
            master.push_back(vector<int>{});
            master[level].push_back(root->val);
        }
        else{
            master[level].push_back(root->val);
        }
        
        if(root->left){
            helper(master, level+1, root->left); 
        }
        if(root->right){
            helper(master, level+1, root->right); 
        }
        return;
        
    }
};
